from numpy.lib.function_base import average


def getConfusionMatrix():
    from sklearn.metrics import confusion_matrix, accuracy_score, precision_score
    import tensorflow as tf
    import pandas as pd
    import seaborn as sns
    import matplotlib.pyplot as plt
    import numpy as np

    df = pd.read_csv('malware_datasets/pe_imports.csv')
    X = df.iloc[:, 1:-1]
    Y_true = df.iloc[:, -1]

    model = tf.keras.models.load_model('models/model_1')
    Y_pred = model.predict(X)
    Y_pred = (Y_pred>0.5).astype(int)
    cf_matrix = confusion_matrix(Y_true, Y_pred)
    print(cf_matrix)
    print(f"accuracy: {accuracy_score(Y_true, Y_pred)}")
    print(f"precision: {precision_score(Y_true, Y_pred, average=None)}")
    sns.heatmap(cf_matrix/np.sum(cf_matrix), annot = True, fmt='.2%', cmap = 'Blues')
    plt.show()

getConfusionMatrix()

